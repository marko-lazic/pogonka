<div class="mb-8">
    <h1 class="text-3xl font-bold text-blue-600 mb-4">Orders</h1>
    <p class="text-gray-700 mb-4">Manage your orders in <span class="font-semibold">Pogonka</span>!</p>

    <a href="/" class="text-blue-500 hover:underline mb-4 inline-block">‚Üê Back to Home</a>
</div>

<div class="mb-8">
    <h2 class="text-2xl font-bold text-blue-600 mb-4">Create New Order</h2>
    <form id="createOrderForm" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
        <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="customerName">
                Customer Name
            </label>
            <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                   id="customerName" type="text" placeholder="Customer Name" required>
        </div>
        <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="taxNumber">
                Tax/VAT Number
            </label>
            <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                   id="taxNumber" type="text" placeholder="Tax/VAT Number" required>
        </div>
        <div class="mb-6">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="email">
                Email
            </label>
            <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                   id="email" type="email" placeholder="Email" required>
        </div>
        <div class="flex items-center justify-between">
            <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
                    type="submit">
                Create Order
            </button>
        </div>
    </form>
</div>

<div class="mb-8">
    <h2 class="text-2xl font-bold text-blue-600 mb-4">Order List</h2>

    {{#if orders.length}}
        <div class="overflow-x-auto">
            <table class="min-w-full bg-white">
                <thead>
                <tr>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        ID
                    </th>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Customer
                    </th>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Status
                    </th>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Created At
                    </th>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Actions
                    </th>
                </tr>
                </thead>
                <tbody>
                {{#each orders}}
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200">
                            <div class="text-sm text-gray-900">{{this.id}}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200">
                            <div class="text-sm font-medium text-gray-900">{{this.customerInfo.name}}</div>
                            <div class="text-sm text-gray-500">{{this.customerInfo.email}}</div>
                            <div class="text-sm text-gray-500">VAT: {{this.customerInfo.taxNumber}}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                  {{#if (eq this.status 'Created')}}bg-gray-100 text-gray-800{{/if}}
                    {{#if (eq this.status 'Confirmed')}}bg-blue-100 text-blue-800{{/if}}
                    {{#if (eq this.status 'Canceled')}}bg-red-100 text-red-800{{/if}}
                    {{#if (eq this.status 'Payment of Avans')}}bg-green-100 text-green-800{{/if}}
                    {{#if (eq this.status 'Production and Packaging')}}bg-yellow-100 text-yellow-800{{/if}}
                    {{#if (eq this.status 'Delivery')}}bg-purple-100 text-purple-800{{/if}}
                    {{#if (eq this.status 'Project Billing')}}bg-indigo-100 text-indigo-800{{/if}}
                ">
                    {{this.status}}
                </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200 text-sm text-gray-500">
                            {{formatDate this.createdAt}}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200 text-sm font-medium">
                            <div class="flex flex-col space-y-2">
                                {{#each this._links}}
                                    {{#if (ne this.rel 'self')}}
                                        {{#if (ne this.rel 'update')}}
                                            {{#if (ne this.rel 'delete')}}
                                                <button
                                                        class="text-blue-600 hover:text-blue-900 action-button"
                                                        data-href="{{this.href}}"
                                                        data-method="{{this.method}}"
                                                        data-rel="{{this.rel}}">
                                                    {{capitalize this.rel}}
                                                </button>
                                            {{/if}}
                                        {{/if}}
                                    {{/if}}
                                {{/each}}
                                <button
                                        class="text-red-600 hover:text-red-900 delete-button"
                                        data-id="{{this.id}}">
                                    Delete
                                </button>
                            </div>
                        </td>
                    </tr>
                {{/each}}
                </tbody>
            </table>
        </div>
    {{else}}
        <p class="text-gray-700">No orders found. Create your first order above!</p>
    {{/if}}
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Create Order Form
        const createOrderForm = document.getElementById('createOrderForm');
        createOrderForm.addEventListener('submit', async function (e) {
            e.preventDefault();

            const customerName = document.getElementById('customerName').value;
            const taxNumber = document.getElementById('taxNumber').value;
            const email = document.getElementById('email').value;

            try {
                const response = await fetch('/orders', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({customerName, taxNumber, email})
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    const data = await response.json();
                    alert(`Error: ${data.error}`);
                }
            } catch (error) {
                alert('Failed to create order');
            }
        });

        // Action Buttons
        const actionButtons = document.querySelectorAll('.action-button');
        actionButtons.forEach(button => {
            button.addEventListener('click', async function () {
                const href = this.getAttribute('data-href');
                const method = this.getAttribute('data-method');

                try {
                    const response = await fetch(href, {
                        method: method
                    });

                    if (response.ok) {
                        window.location.reload();
                    } else {
                        const data = await response.json();
                        alert(`Error: ${data.error}`);
                    }
                } catch (error) {
                    alert('Failed to perform action');
                }
            });
        });

        // Delete Buttons
        const deleteButtons = document.querySelectorAll('.delete-button');
        deleteButtons.forEach(button => {
            button.addEventListener('click', async function () {
                if (confirm('Are you sure you want to delete this order?')) {
                    const id = this.getAttribute('data-id');

                    try {
                        const response = await fetch(`/orders/${id}`, {
                            method: 'DELETE'
                        });

                        if (response.ok) {
                            window.location.reload();
                        } else {
                            const data = await response.json();
                            alert(`Error: ${data.error}`);
                        }
                    } catch (error) {
                        alert('Failed to delete order');
                    }
                }
            });
        });
    });
</script>